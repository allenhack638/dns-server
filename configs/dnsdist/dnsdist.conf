-- dnsdist configuration with Caddy auto SSL support

-- Timeouts (defaults are 2 seconds; bump them to 30s)
setTCPRecvTimeout(30)   -- how long to wait for data from client
setTCPSendTimeout(30)   -- how long to wait when sending a response
setVerbose(true)

-- Backend Pi-hole server
newServer({
  address="pihole:1053",  -- Using Docker service name and port from env
  name="pihole", 
  healthCheckMode='lazy', 
  checkInterval=1, 
  lazyHealthCheckFailedInterval=30, 
  rise=2, 
  maxCheckFailures=3, 
  lazyHealthCheckThreshold=30, 
  lazyHealthCheckSampleSize=100,  
  lazyHealthCheckMinSampleCount=10, 
  lazyHealthCheckMode='TimeoutOnly'
})

-- Allow all clients
setACL({"0.0.0.0/0", "::/0"})

-- Function to get certificate paths from Caddy
function getCaddyCertPath(domain)
  local certDir = "/data/certificates/acme-v02.api.letsencrypt.org-directory/" .. domain .. "/"
  return {
    cert = certDir .. domain .. ".crt",
    key = certDir .. domain .. ".key"
  }
end

-- Get certificate paths for the DNS domain
local certs = getCaddyCertPath(os.getenv("DOMAIN_DNS") or "dns.allenbenny.site")

-- DoH Listener (internal, Caddy will proxy to this)
addDOHLocal("0.0.0.0:" .. (os.getenv("DNSDIST_DOH_PORT") or "8053"),
  certs.cert,
  certs.key,
  "/dns-query"
)

-- DoT Listeners (external, direct access)
addTLSLocal("0.0.0.0:853", certs.cert, certs.key)
addTLSLocal("[::]:853", certs.cert, certs.key)

-- Regular DNS listeners
addLocal("0.0.0.0:53")      -- UDP & TCP on all IPv4 addresses
addLocal("[::]:53")         -- UDP & TCP on all IPv6 addresses

-- Logging and monitoring
addAction(AllRule(), LogAction("/dev/stdout", false, false, true, false, false))

-- Health check endpoint for Docker
function healthCheck()
  return "OK"
end