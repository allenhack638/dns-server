# prettier-ignore
services:
  # Pi-hole - DNS filtering and ad blocking
  pihole:
    image: pihole/pihole:latest
    container_name: dns-pihole
    hostname: pihole
    environment:
      - TZ=${TZ}
      - FTLCONF_webserver_api_password=${FTLCONF_webserver_api_password}
    volumes:
      - ./data/pihole:/etc/pihole
      - ./data/dnsmasq.d:/etc/dnsmasq.d
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "dig", "@127.0.0.1", "google.com"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      dns-network:
        ipv4_address: 172.20.0.10

  # Caddy - Reverse proxy for DoH and Dashboard with Auto SSL
  caddy:
    image: caddy:latest
    container_name: dns-caddy
    hostname: caddy
    environment:
      - DOMAIN_DNS=${DOMAIN_DNS}
      - DOMAIN_DASHBOARD=${DOMAIN_DASHBOARD}
    volumes:
      - ./configs/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./data/caddy-data:/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "caddy", "validate", "--config", "/etc/caddy/Caddyfile"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      dns-network:
        ipv4_address: 172.20.0.12
    depends_on:
      pihole:
        condition: service_healthy

  # Certificate copier - copies certs with proper permissions
  cert-copier:
    image: busybox:1.36-musl
    container_name: dns-cert-copier
    volumes:
      - ./data/caddy-data:/caddy-data:ro
      - ./data/shared-certs:/shared-certs
    environment:
      - DOMAIN_DNS=${DOMAIN_DNS}
    command: >
      sh -c 'echo "Cert copier started - checking weekly";
      while true; do
        if [ -f "/caddy-data/caddy/certificates/acme-v02.api.letsencrypt.org-directory/$$DOMAIN_DNS/$$DOMAIN_DNS.crt" ]; then
          mkdir -p /shared-certs;
          cp "/caddy-data/caddy/certificates/acme-v02.api.letsencrypt.org-directory/$$DOMAIN_DNS/$$DOMAIN_DNS.crt" /shared-certs/dns.crt;
          cp "/caddy-data/caddy/certificates/acme-v02.api.letsencrypt.org-directory/$$DOMAIN_DNS/$$DOMAIN_DNS.key" /shared-certs/dns.key;
          chmod 644 /shared-certs/dns.*;
          echo "$(date): Certificates copied";
        else
          echo "$(date): Waiting for certificates";
        fi;
        echo "$(date): Sleeping 7 days";
        sleep 604800;
      done'
    restart: unless-stopped
    depends_on:
      caddy:
        condition: service_healthy
    networks:
      dns-network:
        ipv4_address: 172.20.0.14
        
  # dnsdist - DNS proxy for DoT and DoH backend
  dnsdist:
    image: powerdns/dnsdist-19:1.9.6
    container_name: dns-dnsdist
    hostname: dnsdist
    volumes:
      - ./configs/dnsdist/dnsdist.conf:/etc/dnsdist/dnsdist.conf:ro
      - ./data/shared-certs:/shared-certs:ro
      - ./data/dnsdist-logs:/var/log
    environment:
      - DOMAIN_DNS=${DOMAIN_DNS}
    entrypoint: ["/bin/sh", "-c"]
    command: ["dnsdist --config /etc/dnsdist/dnsdist.conf --supervised"]
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "853:853/tcp"
    restart: unless-stopped
    cap_add:
      - NET_BIND_SERVICE
    healthcheck:
      test: ["CMD", "dig", "@127.0.0.1", "google.com"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      dns-network:
        ipv4_address: 172.20.0.11
    depends_on:
      pihole:
        condition: service_healthy
      cert-copier:
        condition: service_started

networks:
  dns-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
