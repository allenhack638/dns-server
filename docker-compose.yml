version: "3.8"

services:
  # Pi-hole - DNS filtering and ad blocking
  pihole:
    image: pihole/pihole:latest
    container_name: dns-pihole
    hostname: pihole
    environment:
      - TZ=${TZ}
      - WEBPASSWORD=${PIHOLE_PASSWORD}
      - FTLCONF_LOCAL_IPV4=${HOST_IP}
      - PIHOLE_DNS_=127.0.0.1#${PIHOLE_DNS_PORT}
      - VIRTUAL_HOST=${DOMAIN_DASHBOARD}
      - WEB_PORT=${PIHOLE_WEB_PORT}
    volumes:
      - ${PIHOLE_CONFIG_DIR}:/etc/pihole
      - ${DNSMASQ_CONFIG_DIR}:/etc/dnsmasq.d
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "127.0.0.1:${PIHOLE_DNS_PORT}:53/tcp"
      - "127.0.0.1:${PIHOLE_DNS_PORT}:53/udp"
      - "127.0.0.1:${PIHOLE_WEB_PORT}:80/tcp"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "dig", "@127.0.0.1", "google.com"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - dns-network

  # Caddy - Reverse proxy for DoH and Dashboard with Auto SSL
  # caddy:
  #   image: caddy:latest
  #   container_name: dns-caddy
  #   hostname: caddy
  #   environment:
  #     - DOMAIN_DNS=${DOMAIN_DNS}
  #     - DOMAIN_DASHBOARD=${DOMAIN_DASHBOARD}
  #     - DNSDIST_DOH_PORT=${DNSDIST_DOH_PORT}
  #     - PIHOLE_WEB_PORT=${PIHOLE_WEB_PORT}
  #   volumes:
  #     - ${CADDY_CONFIG_DIR}:/etc/caddy
  #     - ${CADDY_DATA_DIR}:/data
  #     - /etc/localtime:/etc/localtime:ro
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "caddy", "validate", "--config", "/etc/caddy/Caddyfile"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 10s
  #   networks:
  #     - dns-network
  #   depends_on:
  #     pihole:
  #       condition: service_healthy

  # dnsdist - DNS proxy for DoT and DoH backend
  dnsdist:
    image: powerdns/dnsdist-17:latest
    container_name: dns-dnsdist
    hostname: dnsdist
    environment:
      - PIHOLE_DNS_PORT=${PIHOLE_DNS_PORT}
      - DNSDIST_DOH_PORT=${DNSDIST_DOH_PORT}
      # - DNSDIST_WEB_PORT=${DNSDIST_WEB_PORT}
      # - DNSDIST_CONTROL_PORT=${DNSDIST_CONTROL_PORT}
      # - DNSDIST_API_KEY=${DNSDIST_API_KEY}
      # - DNSDIST_CONSOLE_PASSWORD=${DNSDIST_CONSOLE_PASSWORD}
      # - DNSDIST_KEY=${DNSDIST_KEY}
      - DOMAIN_DNS=${DOMAIN_DNS}
    volumes:
      - ./configs/dnsdist/dnsdist.conf:/etc/dnsdist/dnsdist.conf:ro
    entrypoint: ["/bin/sh", "-c"] # ← ADD THIS
    command: ["dnsdist --config /etc/dnsdist/dnsdist.conf --supervised"] # ← ADD THIS
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "853:853/tcp" # DoT
      - "127.0.0.1:${DNSDIST_DOH_PORT}:${DNSDIST_DOH_PORT}/tcp" # DoH backend
      - "127.0.0.1:${DNSDIST_WEB_PORT}:${DNSDIST_WEB_PORT}/tcp" # Web interface
      - "127.0.0.1:${DNSDIST_CONTROL_PORT}:${DNSDIST_CONTROL_PORT}/tcp" # Control socket
    restart: unless-stopped
    cap_add:
      - NET_BIND_SERVICE # Allow binding to privileged ports
    healthcheck:
      test: ["CMD", "dig", "@127.0.0.1", "google.com"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s # Wait longer for certificates
    networks:
      - dns-network
    depends_on:
      pihole:
        condition: service_healthy
      # caddy:
      #   condition: service_healthy

networks:
  dns-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
